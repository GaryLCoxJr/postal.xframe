/*
 postal.federation
 Copyright (C) 2012 - Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT & GPL v2.0
 Version 0.1.0
 */
(function(e,t){typeof module=="object"&&module.exports?module.exports=t(require("underscore"),require("postal")):typeof define=="function"&&define.amd?define(["underscore","postal"],function(n,r){return t(n,r,e)}):e.postal=t(e._,e.postal,e)})(this,function(e,t,n,r){var i={enabled:!0,constraintMode:"blacklist",bridgeSysChannel:!0},s=i;return t.fedx=e.extend({clients:{},transports:{},constraints:{},addClient:function(e){var t=this.clients[e.id];t||(t=this.clients[e.id]={activeTransport:e.type},t.send=function(e,n){n=n||t.activeTransport,t[n].send(e)}),t[e.type]||(t[e.type]={send:e.send},e.postSetup&&e.postSetup())},addConstraint:function(t,n){this.constraints[t]?e.include(this.constraints[t],n)||this.constraints[t].push(n):this.constraints[t]=[n]},removeConstraint:function(t,n){this.constraints[t]&&e.include(this.constraints[t],n)&&(this.constraints[t]=e.without(this.constraints[t],n))},canSendRemote:function(n,r){var i=this.constraints.hasOwnProperty(n),o=i&&e.any(this.constraints[n],function(e){return t.configuration.resolver.compare(e,r)}),u=s.constraintMode==="blacklist",a=!s.bridgeSysChannel&&n!==t.configuration.SYSTEM_CHANNEL||s.bridgeSysChannel;return s.enabled&&a&&(u&&(!i||i&&!o)||!u&&i&&o)},configure:function(t){if(t.constraintMode&&t.constraintMode!=="blacklist"&&t.mode!=="whitelist")throw new Error("postal.fedx constraintMode must be 'blacklist' or 'whitelist'.");return t&&(s=e.defaults(t,i)),s},getFedxWrapper:function(e){return{postal:!0,type:e,instanceId:t.instanceId}},onFederatedMsg:function(e,n){e.envelope.lastSender=n,t.publish(e.envelope)},send:function(t){e.each(this.clients,function(e,n){n!==t.envelope.lastSender&&e.send(t)},this)},signalReady:function(t){t?this.transports[t].signalReady():e.each(this.transports,function(e){e.signalReady()},this)}},t.fedx),t.addWireTap(function(n,r){if(t.fedx.canSendRemote(r.channel,r.topic)){var i=e.clone(r);i.originId=i.originId||t.instanceId,t.fedx.send(e.defaults({envelope:i},t.fedx.getFedxWrapper("message")))}}),t})