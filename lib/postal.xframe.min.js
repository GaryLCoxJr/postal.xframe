/**
 * postal.xframe - postal.js/postal.federation plugin for federating instances of postal.js across iframe/window boundaries.
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.3.0
 * Url: http://github.com/postaljs/postal.xframe
 * License(s): MIT, GPL
 */
(function(t,e){"function"==typeof define&&define.amd?define(["lodash","postal.federation"],function(n,r){return e(n,r,t)}):"object"==typeof module&&module.exports?module.exports=function(t){return e(require("lodash"),t)}:t.postal=e(t._,t.postal,t)})(this,function(t,e){function n(){m.routeMessage.apply(m,arguments)}var r=location.origin||location.protocol+"//"+location.host,i=/MSIE [8,9]/.test(navigator.userAgent),o=/Trident/.test(navigator.userAgent),s=function(e,n){var r=t.find(this.remotes,function(t){return t.instanceId===n});return r&&e.push(r),e},a=function(e,n){var r=t.find(this.remotes,function(t){return t.target===n});return r&&e.push(r),e},u=function(t){t.disconnect()},c="undefined"==typeof window&&postMessage&&location,g=[],d="xframe",f=function(){},p={allowedOrigins:[r],enabled:!0,defaultOriginUrl:"*"},l=p,h=e.fedx.FederationClient.extend({transportName:"xframe",shouldProcess:function(){var e=!!l.allowedOrigins.length;return l.enabled&&("*"===this.options.origin||e&&t.contains(l.allowedOrigins,this.options.origin)||!e||this.options.isWorker&&t.contains(g,this.target)||c)},send:function(t){var n,r;this.shouldProcess()&&(r=c?null:this.target,n=[e.fedx.transports[d].wrapForTransport(t)],this.options.isWorker||c||n.push(this.options.origin),o?1===n.length?this.target.postMessage(n[0]):this.target.postMessage(n[0],n[1]):this.target.postMessage.apply(r,n))}},{getInstance:function(t,e,n){var r=new h(t,{origin:e,isWorker:"undefined"!=typeof Worker&&t instanceof Worker},n);return r.options.isWorker&&m.listenToWorker(r.target),r}}),m=e.fedx.transports[d]={eagerSerialize:i,XFrameClient:h,configure:function(e){return e&&(l=t.defaults(e,p)),l},getTargets:c?function(){return[{target:{postMessage:postMessage}}]}:function(){var e=t.map(document.getElementsByTagName("iframe"),function(t){var e=document.createElement("a");e.href=t.src;var n=e.protocol+"//"+e.host;return"//"===n&&(n=null),{target:t.contentWindow,origin:n||l.defaultOriginUrl}});return window.parent&&window.parent!==window&&e.push({target:window.parent,origin:"*"}),e.concat(g)},remotes:[],wrapForTransport:i?function(t){return JSON.stringify({postal:!0,packingSlip:t})}:function(t){return{postal:!0,packingSlip:t}},unwrapFromTransport:function(t){if("string"!=typeof t||!i&&-1===t.indexOf('"postal":true'))return t;try{return JSON.parse(t)}catch(e){return{}}},routeMessage:function(n){var r=n.source||n.currentTarget,i=this.unwrapFromTransport(n.data);if(i.postal){"worker"===e.instanceId()&&console.log("parsed: "+JSON.stringify(i));var o=t.find(this.remotes,function(t){return t.target===r});o||(o=h.getInstance(r,n.origin,i.packingSlip.instanceId),this.remotes.push(o)),o.onMessage(i.packingSlip)}},sendMessage:function(e){t.each(this.remotes,function(t){t.sendMessage(e)})},disconnect:function(e){e=e||{};var n=e.instanceId?t.reduce(t.isArray(e.instanceId)?e.instanceId:[e.instanceId],s,[],this):e.target?t.reduce(t.isArray(e.target)?e.target:[e.target],a,[],this):this.remotes;e.doNotNotify||t.each(n,u,this),this.remotes=t.without.apply(null,[this.remotes].concat(n))},signalReady:function(e,n){e=t.isArray(e)?e:[e],e=e.length?e:this.getTargets(),n=n||f,t.each(e,function(e){if(e.target){e.origin=e.origin||l.defaultOriginUrl;var r=t.find(this.remotes,function(t){return t.target===e.target});r||(r=h.getInstance(e.target,e.origin),this.remotes.push(r)),r.sendPing(n)}},this)},addEventListener:c?function(){addEventListener("message",n)}:function(t,e,n,r){"undefined"!=typeof window&&("addEventListener"in t?t.addEventListener(e,n,r):t.attachEvent("on"+e,n))},listenToWorker:function(e){t.include(g,e)||(e.addEventListener("message",n),g.push(e))},stopListeningToWorker:function(e){if(e)e.removeEventListener("message",n),g=t.without(g,e);else for(;g.length;)g.pop().removeEventListener("message",n)}};return m.addEventListener(this,"message",n,!1),e});