/**
 * postal.xframe - postal.js/postal.federation plugin for federating instances of postal.js across iframe/window boundaries.
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.2.4
 * Url: http://github.com/postaljs/postal.xframe
 * License(s): MIT, GPL
 */
(function(e,t){"object"==typeof module&&module.exports?module.exports=t(require("underscore"),require("postal.federation")):"function"==typeof define&&define.amd?define(["underscore","postal.federation"],function(n,r){return t(n,r,e)}):e.postal=t(e._,e.postal,e)})(this,function(e,t){function n(){h.routeMessage.apply(h,arguments)}var r=location.origin||location.protocol+"//"+location.host,i=/MSIE [8,9]/.test(navigator.userAgent),o=function(t,n){var r=e.find(this.remotes,function(e){return e.instanceId===n});return r&&t.push(r),t},s=function(t,n){var r=e.find(this.remotes,function(e){return e.target===n});return r&&t.push(r),t},a=function(e){e.disconnect()},u="undefined"==typeof window&&postMessage&&location,c=[],d="xframe",g=function(){},f={allowedOrigins:[r],enabled:!0,defaultOriginUrl:"*"},p=f,l=t.fedx.FederationClient.extend({transportName:"xframe",shouldProcess:function(){var t=!!p.allowedOrigins.length;return p.enabled&&("*"===this.options.origin||t&&e.contains(p.allowedOrigins,this.options.origin)||!t||this.options.isWorker&&e.contains(c,this.target)||u)},send:function(e){var n,r;this.shouldProcess()&&(r=u?null:this.target,n=[t.fedx.transports[d].wrapForTransport(e)],this.options.isWorker||u||n.push(this.options.origin),this.target.postMessage.apply(r,n))}},{getInstance:function(e,t,n){var r=new l(e,{origin:t,isWorker:"undefined"!=typeof Worker&&e instanceof Worker},n);return r.options.isWorker&&h.listenToWorker(r.target),r}}),h=t.fedx.transports[d]={eagerSerialize:i,XFrameClient:l,configure:function(t){return t&&(p=e.defaults(t,f)),p},getTargets:u?function(){return[{target:{postMessage:postMessage}}]}:function(){var t=e.map(document.getElementsByTagName("iframe"),function(e){var t=document.createElement("a");return t.href=e.src,{target:e.contentWindow,origin:t.protocol+"//"+t.host||p.defaultOriginUrl}});return window.parent&&window.parent!==window&&t.push({target:window.parent,origin:"*"}),t.concat(c)},remotes:[],wrapForTransport:i?function(e){return JSON.stringify({postal:!0,packingSlip:e})}:function(e){return{postal:!0,packingSlip:e}},unwrapFromTransport:function(e){if("string"!=typeof e||!i&&-1===e.indexOf('"postal":true'))return e;try{return JSON.parse(e)}catch(t){return{}}},routeMessage:function(n){var r=n.source||n.currentTarget,i=this.unwrapFromTransport(n.data);if(i.postal){"worker"===t.instanceId()&&console.log("parsed: "+JSON.stringify(i));var o=e.find(this.remotes,function(e){return e.target===r});o||(o=l.getInstance(r,n.origin,i.packingSlip.instanceId),this.remotes.push(o)),o.onMessage(i.packingSlip)}},sendMessage:function(t){e.each(this.remotes,function(e){e.sendMessage(t)})},disconnect:function(t){t=t||{};var n=t.instanceId?e.reduce(e.isArray(t.instanceId)?t.instanceId:[t.instanceId],o,[],this):t.target?e.reduce(e.isArray(t.target)?t.target:[t.target],s,[],this):this.remotes;t.doNotNotify||e.each(n,a,this),this.remotes=e.without.apply(null,[this.remotes].concat(n))},signalReady:function(t,n){t=e.isArray(t)?t:[t],t=t.length?t:this.getTargets(),n=n||g,e.each(t,function(t){if(t.target){t.origin=t.origin||p.defaultOriginUrl;var r=e.find(this.remotes,function(e){return e.target===t.target});r||(r=l.getInstance(t.target,t.origin),this.remotes.push(r)),r.sendPing(n)}},this)},addEventListener:u?function(){addEventListener("message",n)}:function(e,t,n,r){"undefined"!=typeof window&&("addEventListener"in e?e.addEventListener(t,n,r):e.attachEvent("on"+t,n))},listenToWorker:function(t){e.include(c,t)||(t.addEventListener("message",n),c.push(t))},stopListeningToWorker:function(t){if(t)t.removeEventListener("message",n),c=e.without(c,t);else for(;c.length;)c.pop().removeEventListener("message",n)}};return h.addEventListener(this,"message",n,!1),t});